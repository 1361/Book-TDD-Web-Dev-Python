[[appendix-bdd]]
[appendix]
Behaviour-Driven Development (BDD)
----------------------------------


* pick tool -- lettuce is popular, but doesn't support python3, so we'll choose
its main rival, 'Behave'.

* we'll also use the 'django-behave' plugin to get a test runner that's compatible with django


make a module for our tests:


[subs="specialcharacters,quotes"]
----
$ *mkdir bdd_tests*
$ *touch bdd_tests/__init__.py*
$ *touch bdd_tests/models.py*
----

Add a steps and a features directory, and placeholder for our first feature:

[subs="specialcharacters,quotes"]
----
$ *mkdir bdd_tests/steps*
$ *mkdir bdd_tests/features*
$ *touch bdd_tests/features/my_lists.feature*
$ *tree bdd_tests*
bdd_tests
├── features
│   └── my_lists.feature
├── __init__.py
└── models.py
----

Run "behave" as a sanity-check

[subs="specialcharacters,quotes"]
----
behave bdd_tests     
0 features passed, 0 failed, 0 skipped
0 scenarios passed, 0 failed, 0 skipped
0 steps passed, 0 failed, 0 skipped, 0 undefined
Took 0m0.000s
----


And start writing our first "Feature".


[role="sourcecode"]
.bdd_tests/features/my_lists.feature
[source,gherkin]
----
Feature: My Lists
    Scenario:
        As a logged-in user
        I want to be able to see all my lists in one page
        So that I can find them all afer I've written them

        Given I am a logged-in user

        When I create a list with first item "Reticulate Splines"
            And I add an item "Immanentize Eschaton"
            And I create a list with first item "Buy milk"

        Then I will see a link to "My lists"
        When I click the link to "My lists"

        Then I will see a link to "Reticulate Splines"
        And I will see a link to "Buy milk"

        When I click the link to "Reticulate Splines"
        Then I will be on the "Reticulate Splines" list page
----



[subs="specialcharacters,quotes"]
----
behave bdd_tests
Feature: My Lists # bdd_tests/features/my_lists.feature:1

  Scenario:                                                   # bdd_tests/features/my_lists.feature:2
    Given I am a logged-in user                               # None
    When I create a list with first item "Reticulate Splines" # None
    And I add an item "Immanentize Eschaton"                  # None
    And I create a list with first item "Buy milk"            # None
    Then I will see a link to "My lists"                      # None
    When I click the link to "My lists"                       # None
    Then I will see a link to "Reticulate Splines"            # None
    And I will see a link to "Buy milk"                       # None
    When I click the link to "Reticulate Splines"             # None
    Then I will be on the "Reticulate Splines" list page      # None


Failing scenarios:
  bdd_tests/features/my_lists.feature:2  

0 features passed, 1 failed, 0 skipped
0 scenarios passed, 1 failed, 0 skipped
0 steps passed, 0 failed, 0 skipped, 10 undefined
Took 0m0.000s

You can implement step definitions for undefined steps with these snippets:

@given('I am a logged-in user')
def step_impl(context):
    assert False

@when('I create a list with first item "Reticulate Splines"')
def step_impl(context):
    assert False

@when('I add an item "Immanentize Eschaton"')
def step_impl(context):
    assert False

@when('I create a list with first item "Buy milk"')
def step_impl(context):
    assert False

@then('I will see a link to "My lists"')
def step_impl(context):
    assert False

@when('I click the link to "My lists"')
def step_impl(context):
    assert False

@then('I will see a link to "Reticulate Splines"')
def step_impl(context):
    assert False

@then('I will see a link to "Buy milk"')
def step_impl(context):
    assert False

@when('I click the link to "Reticulate Splines"')
def step_impl(context):
    assert False

@then('I will be on the "Reticulate Splines" list page')
def step_impl(context):
    assert False
----


