Outline to date & future chapters plan
--------------------------------------

Thanks for reading this far!  I'd really like your input on this too:  What do
you think of the book so far, and what do you think about the topics I'm
proposing to cover in the list below?  Email me at
obeythetestinggoat@gmail.com!

NB - when I say "book" below, they're all going to be parts of this book. I
guess I should say "part" instead, but for some reason I've decided book sounds
cooler.  Like Lord of the Rings.


* Preface (Chapter 0) - intro + pre-requisites

BOOK 1: Building a minimum viable app with TDD
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Done:

* Chapter 1 - Getting Django set up using a Functional Test
* Chapter 2 - Extending our FT using the unittest module
* Chapter 3 - Testing a simple home page with unit tests
* Chapter 4 - What are we doing with all these tests?
* Chapter 5 - Saving form submissions to the database
* Chapter 6 - Getting to the minimum viable site
* Chapter 7 - Prettification
* Chapter 8 - Deploy!


BOOK 2: Growing the site
~~~~~~~~~~~~~~~~~~~~~~~~

Done:

* Chapter 9 - Input validation and test organisation
* Chapter 10 - A simple form
* Chapter 11 - More advanced Forms 
* Chapter 12 - Database migrations
* Chapter 13 - Dipping our toes, very tentatively, into JavaScript
* Chapter 14 - User authentication, integrating 3rd party plugins, and Mocking
               with JavaScript

Todo:


Chapter 15: Authentication continued: server-side user accounts and admin
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

* users want to be able to view 'their' todos
* related field on list for owner
* use Mozilla Persona
* discuss difficulties of integrating external tools
* FT Sign up, login/logout
* Explain the admin site
* Fixtures?
* "claim" an existing list (?)
* URLs would need to be less guessable


Chapter 16: More Ajax (?)
^^^^^^^^^^^^^^^^^^^^^^^^^

* add notes field to list items
* use markdown for notes
* note re: security / XSS
* dynamic previews, like on SO? (pointless going via django tho?)
* is this chapter unnecessary now that we have some ajax in ch. 14?


Chapter 17: sharing lists
^^^^^^^^^^^^^^^^^^^^^^^^^

* email notifications
* django notifications (?)



More/Other possible contents
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

*Django stuff:*

* South / migrations (switch to 1.6?)
* switch database to eg postgres
* uploading files?

*Testing topics to work in*

* more how to read a traceback (ref step 4 in chapter 3)
* simplify the model test down to minimal/best practice.
* talk about the "purist" approach to unit testing vs the django test client.
* snapshot_on_error
* addCleanup
* PhantomJS for faster Fts?
* what to test in templates
* fixtures (factory boy?)
* mocking (python mock)
* selenium page pattern
* JS: mocking external web service to simulate errors
* coverage
* Splinter
* difference between unittest.TestCase, django.test.TestCase, LiveServerTestCase
* general troubleshooting tips (appendix, collecting all notes etc?)
* self.fail as reminders to do things
* alternative test runners -- py.test, nose (lots of ppl mentioned latter)
* LiveServerTestCase does not flush staging server DB. fix in CI chapter?


*External systems integration*

* Gravatar
* Mozilla persona?

*Deployment stuff*

* South + testing data migrations
* FT for 404 and 500 pages?
* email integration


BOOK 3: Trendy stuff
~~~~~~~~~~~~~~~~~~~~

Chapter 18: CI
^^^^^^^^^^^^^^

Jenkins vs A.N. other?
Salt for deployment??


Chapter 19 & 20: More Javascript
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

* MVC tool (backbone / angular)
* single page website (?) or bottomless web page?
* switching to a full REST API
* HTML5, eg LocalStorage
* Encryption - client-side decrypt lists, for privacy?


Chapter 21: Async
^^^^^^^^^^^^^^^^^

* websockets
* tornado/gevent (or sthing based on Python 3 async??)
* how to get django to talk to tornado: redis? (just for fun?)
* for collaborative lists??


Chapter 22: Caching
^^^^^^^^^^^^^^^^^^^

* unit testing `memcached`
* Functionally testing performance
* Apache `ab` testing

5/6 chapters?


Appendices
~~~~~~~~~~


Possible appendix topics
^^^^^^^^^^^^^^^^^^^^^^^^

* BDD  (+2 from reddit)
* Django Class-based views
* Mobile (use selenium, link to using bootstrap?)
* Payments... Some kind of shopping cart?
* unit testing fabric scripts
* testing tools pros & cons, eg django test client vs mocks, liverservertestcase vs roll-your-own
* NoSQL / Redis / MongoDB?



Appendix I: PythonAnywhere
^^^^^^^^^^^^^^^^^^^^^^^^^^

* Running Firefox Selenium sessions with pyVirtualDisplay
* Setting up Django as a PythonAnywhere web app
* Cleaning up /tmp
* Screenshots


Appendix II: Django class-based views
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
* refactoring, proving usefulness of view tests.
