Chapter 1 - Getting Django set up using a Functional Test
---------------------------------------------------------

In my first draft of this book, I started off with a "toy" example, designed to
introduce the concepts of TDD before we dive into the complexities of web 
development (you can still look it up if you like, it's on my github page).

In the end though, I decided that you guys would prefer to dive right in.
You're here to learn about web programming, not Roman Numeral calculators
(even if the latter can be surprisingly interesting).

So without further ado, let's get started.

Obey the testing goat: Do nothing until you have a test
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

''Obey the testing goat'' was a short-lived meme from PyCon 2010, which I
intend to single-handedly resuscitate. Now, normally first step in web
development is getting your web framework installed and configured.  But TDD
requires a different mindset.  When you're doing TDD, you always have the
Testing Goat inside you -- bloody-minded as goats are -- bleating ''Test-first,
Test-first!''

In TDD the first step is always the same: *write a test*.  

'First' we write the test, 'then' we run it and check that it fails as
expected.  'Only then' do we go ahead and write production code.  Repeat that 
to yourself in a goat-like voice.

Another thing about goats is that they take one step at a time.  That's one of
the reasons they seldom fall off mountains, no matter how steep they are. So,
we'll proceed with nice small steps; the first thing we want to do is check
that we've installed Django successfully, and that it works -- the absolute 
minimum, and the way we'll check is by confirming that we can spin up Django's
development server and actually see it running, in a normal web browser, on
our local PC.

We'll use the Selenium browser automation tool for this. Create a new Python
file called `tests.py`, and enter the following code.  If you feel like making
a few little goat noises as you do it, it may help.

----
from selenium import webdriver

browser = webdriver.Firefox()
browser.get('http://localhost:8001')
assert

