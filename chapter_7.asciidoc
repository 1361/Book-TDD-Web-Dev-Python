Ship early, ship often!
-----------------------

It's time to deploy the first version of our site and make it public.  They say
that if you wait until you feel ready to ship, then you've waited too long.

Is our site usable?  Is it better than nothing? Can make lists on it? Yes.
No, you can't log in yet.  No you can't mark tasks as completed.  But do we
really need any of that stuff? Not really -- and you can never be sure what
your users are 'actually' going to do with your site once they get their 
hands on it. We think our users want to use the site for to-do lists, but maybe
they actually want to use it to make "top 10 best fly-fishing spots" lists, for
which you don't need any kind of ``mark completed'' function. We won't know
until we put it out there.

So what 'do' we need to do before we can deploy?  Just a few things really:

* Make the site a tiny bit more presentable
* Choose a hosting provider and test our site works in their environment
* (?) wire up the site to email us if there are any server errors

Let's see how TDD can help us with with some of these tasks.

Prettification: Integrating a CSS framework
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Our site is undeniably a bit ugly at the moment.  We can't be adding to Python's
reputation for being http://grokcode.com/746/dear-python-why-are-you-so-ugly/[ugly],
so let's do a tiny bit of polishing.  Here's a few things we might want:

* A large, centered block for our new item box, both for new and existing lists
* A terms & conditions footer that "sticks" to the bottom of the page

How do we apply TDD to these things?  In general, you shouldn't test aesthetics,
but you can test some aspects.  We're going to use Cascading Style Sheets (CSS) for
our styling, and they will be loaded as static files.  Static files can be a bit
tricky to configure (especially, as we'll see later, when you move off your own
PC and onto a hosting site), so we'll want some kind of quick test that the CSS
has loaded.  And, while we might not want to test things like fonts and shading,
we can test, for example, that the footer is reasonably close to the bottom of
the page.

Let's start a new test method inside our functional test:




Testing deployment using a staging site
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The danger areas of deployment:
- "but it works on my machine!"
- static files
- the database
- dependencies (and their versions)
- keeping staging and live the same.

the solution:
- a staging site
- an FT
- an FT
- virtualenvs
- automation


todo.
